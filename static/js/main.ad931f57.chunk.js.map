{"version":3,"sources":["components/Cardarray.js","components/Home.js","components/App.js","index.js"],"names":["cards","count","push","Home","state","dealerHand","dealerStay","hand","stay","deck","status","componentWillMount","_this","resetDeck","newcardindex","Math","floor","random","length","newcard1","splice","newcardindex2","newcard2","newcardindex3","newcard3","newcardindex4","newcard4","setState","getValue","aces","value","charAt","hit","newcard","dealerValue","newcardindex1","Object","toConsumableArray","concat","checkStatus","dealerHit","continuous","newvalue","newcards","alert","this","react_default","a","createElement","alt","className","src","controls","react","disabled","onClick","displayValue","Component","history","createHistory","App","react_router","exact","path","component","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.ad931f57.chunk.js","sourcesContent":["var cards = []\nvar count = 2;\n\n//insert cards 2-10 \nwhile (count < 11) {\n    cards.push([\"imgs/\"  + count + \"S.png\",count])\n    cards.push([\"imgs/\"  + count + \"C.png\",count])\n    cards.push([\"imgs/\"  + count + \"D.png\",count])\n    cards.push([\"imgs/\"  + count + \"H.png\",count])\n    count++;\n}\n\n//insert face cards + aces\ncards.push([\"imgs/KS.png\",10])\ncards.push([\"imgs/KC.png\",10])\ncards.push([\"imgs/KD.png\",10])\ncards.push([\"imgs/KH.png\",10])\ncards.push([\"imgs/QS.png\",10])\ncards.push([\"imgs/QD.png\",10])\ncards.push([\"imgs/QH.png\",10])\ncards.push([\"imgs/QC.png\",10])\ncards.push([\"imgs/JS.png\",10])\ncards.push([\"imgs/JD.png\",10])\ncards.push([\"imgs/JH.png\",10])\ncards.push([\"imgs/JC.png\",10])\ncards.push([\"imgs/AS.png\",11])\ncards.push([\"imgs/AD.png\",11])\ncards.push([\"imgs/AH.png\",11])\ncards.push([\"imgs/AC.png\",11])\n\nexport default cards;\n","import React, { Component, Fragment } from 'react';\nimport cards from './Cardarray'\n\nclass Home extends Component {\n  state = {\n    dealerHand: [],\n    dealerStay: false,\n    hand: [],\n    stay: false,\n    deck: [],   //make this a representation of the deck \n    status: \"\"\n  }\n\n  componentWillMount = () => {\n      this.resetDeck();\n  }\n\n  resetDeck = () => {\n    var count = 0;\n    var deck = [];\n    //deck is represented by indexes 0-51\n    while (count < 52) {\n      deck.push(count)\n      count++;\n    }\n    //deal cards to players\n    var newcardindex = (Math.floor((Math.random() * deck.length) + 1))-1;\n    var newcard1 = cards[deck[newcardindex]]\n    deck.splice(newcardindex,1);\n    var newcardindex2 = (Math.floor((Math.random() * deck.length) + 1))-1;\n    var newcard2 = cards[deck[newcardindex2]]\n    deck.splice(newcardindex2,1);\n    var newcardindex3 = (Math.floor((Math.random() * deck.length) + 1))-1;\n    var newcard3 = cards[deck[newcardindex3]]\n    deck.splice(newcardindex3,1);\n    var newcardindex4 = (Math.floor((Math.random() * deck.length) + 1))-1;\n    var newcard4 = cards[deck[newcardindex4]]\n    deck.splice(newcardindex4,1);\n    this.setState({\n      deck: deck,\n      hand: [newcard1, newcard2],\n      dealerHand: [newcard3, newcard4],\n      status: \"\",\n      stay:false,\n    })\n  }\n\n  getValue = (hand) => {\n    //go through deck adding value and counting aces at the same time. count aces as 11 originally. while we are over 21 and while\n    //There are still aces\n    var count = 0;\n    var aces = 0;\n    var value = 0;\n    //Get the sum of the hand\n    while (count < hand.length) {\n      value += hand[count][1];\n      if (hand[count][0].charAt(7) === 'A') {\n        aces++;\n      }\n      count++;\n    }\n    //If we are over, see if we can get under by treating the aces as one until we are under 21\n    while (value > 21 && aces > 0) {\n      value-=10;\n      aces--;\n    } \n    return value;\n  }\n\n\n\n  hit = () => {\n    var newcardindex = (Math.floor((Math.random() * (this.state.deck.length)) + 1))-1;\n    var newcard = cards[this.state.deck[newcardindex]]\n    var deck = this.state.deck\n    var value = this.getValue(this.state.hand)\n    var dealerValue = this.getValue(this.state.dealerHand)\n    deck.splice(newcardindex,1);\n    if (dealerValue <= 15 && (value + newcard[1]) <= 21) { //Dealer hits\n      var newcardindex1 = (Math.floor((Math.random() * (deck.length)) + 1))-1;  //we use deck here coz its adjusted\n      var newcard1 = cards[deck[newcardindex1]]\n      this.setState({\n        hand : [...this.state.hand, newcard],\n        deck: deck,\n        dealerHand: [...this.state.dealerHand, newcard1],\n      } ,() => {this.checkStatus()})\n    }\n    else { \n    //Dealer stays and we check the status\n    this.setState({\n      hand : [...this.state.hand, newcard],\n      deck: deck,\n    }, () => {this.checkStatus()})\n    }\n  }\n\n  stay = () => {\n    //If we stay dealer hits until he has a good hand or busts\n    this.setState({\n      stay:true\n    }, () => {this.dealerHit(true)})\n  }\n\n  dealerHit = (continuous) => {\n    var newvalue = 0;\n    var newcards = [];\n    var deck = this.state.deck\n    var value = this.getValue(this.state.hand)\n    var dealerValue = this.getValue(this.state.dealerHand)\n    if (dealerValue + newvalue <=15 && dealerValue + newvalue < value) {\n      do {\n        var newcardindex = (Math.floor((Math.random() * (deck.length)) + 1))-1;\n        deck.splice(newcardindex,1);\n        newcards.push(cards[this.state.deck[newcardindex]])\n        newvalue += cards[this.state.deck[newcardindex]][1]\n      }\n      while (dealerValue + newvalue <=15 && dealerValue + newvalue < value && continuous)\n    }\n    this.setState({\n      dealerHand : [...this.state.dealerHand, ...newcards],\n      deck: deck,\n    }, () => {this.checkStatus()})\n  }\n\n  checkStatus = () => {\n    var status = \"\";\n    var value = this.getValue(this.state.hand)\n    var dealerValue = this.getValue(this.state.dealerHand)\n    if (value > 21) {\n      status = \"L\"\n      alert(\"You lost. You busted\")\n    }\n    else if (dealerValue > 21) {\n      status  = \"W\"\n      alert(\"You won. The dealer busted\")\n    }\n    else if (dealerValue > value && this.state.stay) {\n      alert(\"You lost. The dealer had a higher hand\")\n      status  = \"L\"\n    }\n    else if (dealerValue < value) {\n      if (dealerValue <= 15) {\n        this.dealerHit(false)\n      }\n      else if (this.state.stay) {  //if the dealer doesnt draw and we are staying and we reveal then we won\n        alert(\"You won. You had a higher hand\")\n        status  = \"W\"\n      }\n    }\n    else if (dealerValue === value) {\n      if (this.state.stay) {\n        alert(\"Tie\")\n        status  = \"T\"\n      }\n    }\n    else {\n    }\n\n    this.setState ({\n      status: status\n    })\n\n  }\n\n  render() {\n    var hand = [];\n    var count = 0;\n    while (count < this.state.hand.length) {\n      hand.push(<img alt = \"\" className = \"card\" src = {this.state.hand[count][0]}/>)\n      count ++;\n    }\n    count = 0\n    var dealerHand = [];\n    while (count < this.state.dealerHand.length) {\n      if (count === 0 && this.state.status.length < 1) {\n        dealerHand.push(<img alt = \"\" className = \"card\" src = \"imgs/red_back.png\"/>)\n      }\n      else {\n        dealerHand.push(<img alt = \"\" className = \"card\" src = {this.state.dealerHand[count][0]}/>)\n      }\n      count ++;\n    }\n    var controls = [];\n    if (this.state.status.length < 1) {\n      controls.push(\n        <Fragment>\n          <button disabled = {this.state.stay} onClick = {this.hit}> Hit </button>\n          <button disabled = {this.state.stay} onClick = {this.stay}> Stay </button>\n        </Fragment>\n      )\n    }\n    else {\n      controls.push(\n        <Fragment>\n          <button  onClick = {this.resetDeck}> Reset Game </button>\n        </Fragment>\n      )\n    }\n\n    var displayValue = this.getValue(this.state.hand)\n    return (\n        <div className = \"homeContainer\">\n          <div className = \"dealerContainer\"> \n            {dealerHand}\n          </div>\n          <div className = \"handContainer\">\n            {controls}\n            <p className = \"total\"> {\"Current: \" + displayValue} </p>\n            {hand}\n          </div>\n        </div>\n\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Router } from 'react-router';\nimport { Route } from 'react-router-dom';\nimport createHistory from 'history/createBrowserHistory';\nimport Home from './Home';\nimport '../scss/app.scss';\n\nconst history = createHistory();\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n      <div className=\"app-container\">\n          <Route exact path=\"/\" component={Home} />\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}