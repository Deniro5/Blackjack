{"version":3,"sources":["components/Cardarray.js","components/Home.js","components/App.js","index.js"],"names":["cards","count","push","Home","state","dealerHand","dealerStay","hand","stay","deck","status","componentWillMount","_this","resetDeck","newcardindex","Math","floor","random","length","newcard1","splice","newcardindex2","newcard2","newcardindex3","newcard3","newcardindex4","newcard4","setState","getValue","aces","value","charAt","hit","newcard","dealerValue","newcardindex1","Object","toConsumableArray","concat","checkStatus","dealerHit","continuous","newvalue","newcards","alert","this","react_default","a","createElement","alt","className","src","controls","react","disabled","onClick","displayValue","Component","App","components_Home","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.8a9821f8.chunk.js","sourcesContent":["var cards = []\nvar count = 2;\n\n//insert cards 2-10 \nwhile (count < 11) {\n    cards.push([\"imgs/\"  + count + \"S.png\",count])\n    cards.push([\"imgs/\"  + count + \"C.png\",count])\n    cards.push([\"imgs/\"  + count + \"D.png\",count])\n    cards.push([\"imgs/\"  + count + \"H.png\",count])\n    count++;\n}\n\n//insert face cards + aces\ncards.push([\"imgs/KS.png\",10])\ncards.push([\"imgs/KC.png\",10])\ncards.push([\"imgs/KD.png\",10])\ncards.push([\"imgs/KH.png\",10])\ncards.push([\"imgs/QS.png\",10])\ncards.push([\"imgs/QD.png\",10])\ncards.push([\"imgs/QH.png\",10])\ncards.push([\"imgs/QC.png\",10])\ncards.push([\"imgs/JS.png\",10])\ncards.push([\"imgs/JD.png\",10])\ncards.push([\"imgs/JH.png\",10])\ncards.push([\"imgs/JC.png\",10])\ncards.push([\"imgs/AS.png\",11])\ncards.push([\"imgs/AD.png\",11])\ncards.push([\"imgs/AH.png\",11])\ncards.push([\"imgs/AC.png\",11])\n\nexport default cards;\n","import React, { Component, Fragment } from \"react\";\nimport cards from \"./Cardarray\";\n\nclass Home extends Component {\n  state = {\n    dealerHand: [],\n    dealerStay: false,\n    hand: [],\n    stay: false,\n    deck: [], //make this a representation of the deck\n    status: \"\",\n  };\n\n  componentWillMount = () => {\n    this.resetDeck();\n  };\n\n  resetDeck = () => {\n    var count = 0;\n    var deck = [];\n    //deck is represented by indexes 0-51\n    while (count < 52) {\n      deck.push(count);\n      count++;\n    }\n    //deal cards to players\n    var newcardindex = Math.floor(Math.random() * deck.length + 1) - 1;\n    var newcard1 = cards[deck[newcardindex]];\n    deck.splice(newcardindex, 1);\n    var newcardindex2 = Math.floor(Math.random() * deck.length + 1) - 1;\n    var newcard2 = cards[deck[newcardindex2]];\n    deck.splice(newcardindex2, 1);\n    var newcardindex3 = Math.floor(Math.random() * deck.length + 1) - 1;\n    var newcard3 = cards[deck[newcardindex3]];\n    deck.splice(newcardindex3, 1);\n    var newcardindex4 = Math.floor(Math.random() * deck.length + 1) - 1;\n    var newcard4 = cards[deck[newcardindex4]];\n    deck.splice(newcardindex4, 1);\n    this.setState({\n      deck: deck,\n      hand: [newcard1, newcard2],\n      dealerHand: [newcard3, newcard4],\n      status: \"\",\n      stay: false,\n    });\n  };\n\n  getValue = (hand) => {\n    //go through deck adding value and counting aces at the same time. count aces as 11 originally. while we are over 21 and while\n    //There are still aces\n    var count = 0;\n    var aces = 0;\n    var value = 0;\n    //Get the sum of the hand\n    while (count < hand.length) {\n      value += hand[count][1];\n      if (hand[count][0].charAt(5) === \"A\") {\n        aces++;\n      }\n      count++;\n    }\n    //If we are over, see if we can get under by treating the aces as one until we are under 21\n    while (value > 21 && aces > 0) {\n      value -= 10;\n      aces--;\n    }\n    return value;\n  };\n\n  hit = () => {\n    var newcardindex = Math.floor(Math.random() * this.state.deck.length + 1) - 1;\n    var newcard = cards[this.state.deck[newcardindex]];\n    var deck = this.state.deck;\n    var value = this.getValue(this.state.hand);\n    var dealerValue = this.getValue(this.state.dealerHand);\n    deck.splice(newcardindex, 1);\n    if (dealerValue <= 15 && value + newcard[1] <= 21) {\n      //Dealer hits\n      var newcardindex1 = Math.floor(Math.random() * deck.length + 1) - 1; //we use deck here coz its adjusted\n      var newcard1 = cards[deck[newcardindex1]];\n      this.setState(\n        {\n          hand: [...this.state.hand, newcard],\n          deck: deck,\n          dealerHand: [...this.state.dealerHand, newcard1],\n        },\n        () => {\n          this.checkStatus();\n        }\n      );\n    } else {\n      //Dealer stays and we check the status\n      this.setState(\n        {\n          hand: [...this.state.hand, newcard],\n          deck: deck,\n        },\n        () => {\n          this.checkStatus();\n        }\n      );\n    }\n  };\n\n  stay = () => {\n    //If we stay dealer hits until he has a good hand or busts\n    this.setState(\n      {\n        stay: true,\n      },\n      () => {\n        this.dealerHit(true);\n      }\n    );\n  };\n\n  dealerHit = (continuous) => {\n    var newvalue = 0;\n    var newcards = [];\n    var deck = this.state.deck;\n    var value = this.getValue(this.state.hand);\n    var dealerValue = this.getValue(this.state.dealerHand);\n    if (dealerValue + newvalue <= 15 && dealerValue + newvalue < value) {\n      do {\n        var newcardindex = Math.floor(Math.random() * deck.length + 1) - 1; //***CHANGE BACK TO MATHRANDOM */\n        newcards.push(cards[this.state.deck[newcardindex]]);\n        newvalue += cards[this.state.deck[newcardindex]][1];\n        deck.splice(newcardindex, 1);\n      } while (\n        dealerValue + newvalue <= 15 &&\n        dealerValue + newvalue < value &&\n        continuous\n      );\n    }\n    this.setState(\n      {\n        dealerHand: [...this.state.dealerHand, ...newcards],\n        deck: deck,\n      },\n      () => {\n        this.checkStatus();\n      }\n    );\n  };\n\n  checkStatus = () => {\n    var status = \"\";\n    var value = this.getValue(this.state.hand);\n    var dealerValue = this.getValue(this.state.dealerHand);\n    if (value > 21) {\n      status = \"L\";\n      alert(\"You lost. You busted\");\n    } else if (dealerValue > 21) {\n      status = \"W\";\n      alert(\"You won. The dealer busted\");\n    } else if (dealerValue > value && this.state.stay) {\n      alert(\"You lost. The dealer had a higher hand\");\n      status = \"L\";\n    } else if (dealerValue < value) {\n      if (dealerValue <= 15 && this.state.stay) {\n        this.dealerHit(false);\n      } else if (this.state.stay) {\n        //if the dealer doesnt draw and we are staying and we reveal then we won\n        alert(\"You won. You had a higher hand\");\n        status = \"W\";\n      }\n    } else if (dealerValue === value) {\n      if (this.state.stay) {\n        alert(\"Tie\");\n        status = \"T\";\n      }\n    } else {\n    }\n\n    this.setState({\n      status: status,\n    });\n  };\n\n  render() {\n    var hand = [];\n    var count = 0;\n    while (count < this.state.hand.length) {\n      hand.push(<img alt='' className='card' src={this.state.hand[count][0]} />);\n      count++;\n    }\n    count = 0;\n    var dealerHand = [];\n    while (count < this.state.dealerHand.length) {\n      if (count === 0 && this.state.status.length < 1) {\n        dealerHand.push(<img alt='' className='card' src='imgs/red_back.png' />);\n      } else {\n        dealerHand.push(\n          <img alt='' className='card' src={this.state.dealerHand[count][0]} />\n        );\n      }\n      count++;\n    }\n    var controls = [];\n    if (this.state.status.length < 1) {\n      controls.push(\n        <Fragment>\n          <button disabled={this.state.stay} onClick={this.hit}>\n            Hit\n          </button>\n          <button disabled={this.state.stay} onClick={this.stay}>\n            Stay\n          </button>\n        </Fragment>\n      );\n    } else {\n      controls.push(\n        <Fragment>\n          <button onClick={this.resetDeck}> Reset Game </button>\n        </Fragment>\n      );\n    }\n\n    var displayValue = this.getValue(this.state.hand);\n    return (\n      <div className='homeContainer'>\n        <div className='dealerContainer'>{dealerHand}</div>\n        <div className='handContainer'>\n          {controls}\n          <p className='total'> {\"Current: \" + displayValue} </p>\n          {hand}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport Home from './Home';\nimport '../scss/app.scss';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"app-container\">\n        <Home/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}